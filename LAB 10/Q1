#include<iostream>
#include<string>
using namespace std;
class Animal {
protected:
	string name;
	int age;
	string habitat;
public:
	Animal() {
		name = "";
		age = 0;
		habitat = "";
	}
	Animal(string name, int age, string habitat) {
		this->name = name;
		this->age = age;
		this->habitat = habitat;
	}
	void setName(string n) {
		name = n;
	}
	string getName() {
		return name;
	}
	void setAge(int ag) {
		age = ag;
	}
	int getAge() {
		return age;
	}
	void setHabitat(string hbt) {
		habitat = hbt;
	}
	string getHabitat() {
		return habitat;
	}
	virtual void make_sound()=0;
	virtual void display_info()=0;

};
class Lion : public Animal {
private:
	string mane_color;
	string roar_type;
public:
	Lion() {
		mane_color = "";
		roar_type = "";

	}
	Lion(string n, int a, string hab, string mc, string rt) {
		name = n;
		age = a;
		habitat = hab;
		mane_color = mc;
		roar_type = rt;
	}
	void setMANECOLOR(string mnc) {
		mane_color = mnc;
	}
	string getMANECOLOR() {
		return mane_color;
	}
	void setROARTYPE(string rt) {
		roar_type = rt;
	}
	string getROAR() {
		return roar_type;
	}
	void make_sound() override {
		cout << "SOUND OF LION IS: ";
		cout << "ROARRRRRRRRRRRR" << endl;

	}
	void display_info() override {
		cout << "DETAILS OF ANIMAL ARE: " << endl;
		cout << "NAME: " << name << "AGE: " << age << "HABITAT: " << habitat << "MANE COLOR: "
			<< mane_color << "ROAR TYPE: " << roar_type << endl;
	}
};
class Elephant : public Animal {
private:
	int tusk_length;
	int trunk_length;
public:
	Elephant() {
		tusk_length = 0;
		trunk_length = 0;
	}
	Elephant(string n, int a, string hab, int tuskl, int trunkl) {
		name = n;
		age = a;
		habitat = hab;
		tusk_length = tuskl;
		trunk_length = trunkl;
	}
	void setTUSK(int tuskl) {
		tusk_length = tuskl;
	}
	int getTUSK() {
		return tusk_length;
	}
	void setTRUNK(int trunkl) {
		trunk_length = trunkl;
	}
	int getTRUNK() {
		return trunk_length;
	}
	void make_sound() override {
		cout << "SOUND OF ELEPHANT IS: ";
		cout << "CRIESSSSSSSSSSS" << endl;

	}
	void display_info() override {
		cout << "DETAILS OF ANIMAL ARE: " << endl;
		cout << "NAME: " << name << "AGE: " << age << "HABITAT: " << habitat << "TUSK LENGTH: "
			<< tusk_length << "TRUNK LENGTH: " << trunk_length << endl;
	}

};
class Girrafe : public Animal {
private:
	int neck_length;
	string pattern_type;
public:
	Girrafe() {
		neck_length = 0;
		pattern_type = "";

	}
	Girrafe(string n, int a, string hab, int neckl, string pat) {
		name = n;
		age = a;
		habitat = hab;
		neck_length = neckl;
		pattern_type = pat;
	}
	void setNECK(int nl) {
		neck_length = nl;
	}
	int getNECK() {
		return neck_length;
	}
	void setPATTERN(string pt) {
		pattern_type = pt;
	}
	string getPATTERN() {
		return pattern_type;
	}
	void make_sound() override {
		cout << "SOUND OF GIRRAFE IS: ";
		cout << "giraffeeeeeeeeeee" << endl;

	}
	void display_info() override {
		cout << "DETAILS OF ANIMAL ARE: " << endl;
		cout << "NAME: " << name << "AGE: " << age << "HABITAT: " << habitat << "NECK LENGTH: "
		<< neck_length << "PATTERN TYPE: " << pattern_type << endl;
	}
};
int main() {
	Lion obj1("LION1", 12, "jungle", "YELLOW", "WOOOOOOO");
	Elephant obj2("ELE", 17, "JUNGLE", 34, 43);
	Girrafe obj3("GIRI", 176, "JUNGLE", 43, "DOTTES");
	Animal* item1 = &obj1;
	Animal* item2 = &obj2;
	Animal* item3 = &obj3;
	item1->make_sound();
	item1->display_info();
	item2->make_sound();
	item2->display_info();
	item3->make_sound();
	item3->display_info();
	return 0;

}
